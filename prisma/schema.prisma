// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum AccountType {
  CHECKING
  SAVINGS
}

enum AccountStatus {
  ACTIVE
  INACTIVE
  CLOSED
}

model User {
  id         String   @id @default(uuid()) // Automatically generated UUID
  fname      String
  lname      String
  username   String   @unique
  email      String   @unique
  password   String
  street     String
  state      String
  zip        String
  city       String
  country    String
  phone      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  accounts   Account[] // One-to-many relationship: A user can have multiple accounts
}

model Account {
  id          String       @id @default(uuid()) // Account UUID
  accountNumber String     @unique // Unique account number
  balance     Float        @default(0) // Current account balance
  accountType AccountType  // Type of account (CHECKING or SAVINGS)
  createdAt   DateTime     @default(now()) // Date the account was created
  closedAt    DateTime?    // Date the account was closed, nullable
  status      AccountStatus // Account status (ACTIVE, INACTIVE, or CLOSED)

  userId      String       // Foreign key to the User table
  user        User         @relation(fields: [userId], references: [id]) 
}
